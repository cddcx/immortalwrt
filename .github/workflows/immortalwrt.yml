name: immortalwrt

on:
  workflow_dispatch:
    inputs:
      manual:
        description: '手动触发一次编译'

env:
  SOURCE_URL: https://github.com/immortalwrt/immortalwrt
  SOURCE_BRANCH: master
  CONFIG_FILE: configs/x86_64.config
  DIY_SCRIPT: diys/diy.sh
  CLASH_KERNEL: amd64
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: X86_64
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查项目
      uses: actions/checkout@main

    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android
        sudo -E apt-get -qq update
        sudo -E apt-get -y install rename libfuse-dev $(curl -fsSL is.gd/depends_ubuntu_2204)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: 克隆源码
      id: clone
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone $SOURCE_URL -b $SOURCE_BRANCH workspace/openwrt
        cd workspace/openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        VERSION_INFO=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV

    - name: 更新安装Feeds
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files $OPENWRT_PATH/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $GITHUB_WORKSPACE/scripts/*.sh
        chmod +x $DIY_SCRIPT
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_SCRIPT
        $GITHUB_WORKSPACE/scripts/preset-clash-core.sh $CLASH_KERNEL
        $GITHUB_WORKSPACE/scripts/preset-settings.sh $CLASH_KERNEL
        #$GITHUB_WORKSPACE/scripts/preset-adguard-core.sh $CLASH_KERNEL

    - name: 下载依赖
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 生成变量
      run: |
        cd $OPENWRT_PATH
        SOURCE_REPO="$(echo $SOURCE_URL | awk -F '/' '{print $(NF)}')"
        echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
        DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV

    - name: 编译包
      run: |
        cd $OPENWRT_PATH
        echo -e "$(nproc) thread compile"
        make tools/compile -j$(nproc) || make tools/compile -j1 V=s
        make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
        make diffconfig
        make target/compile -j$(nproc) || make target/compile -j1 V=s IGNORE_ERRORS=1
        make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j1 V=s IGNORE_ERRORS=1
        make package/index

    - name: 生成固件
      id: generate
      run: |
        cd $OPENWRT_PATH
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: 查看空间使用率
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      if: steps.generate.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        rm -rf packages *.buildinfo *.manifest *kernel.bin *rootfs.img sha256sums
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

    - name: 上传固件
      if: steps.generate.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.SOURCE_REPO }}-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}-${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE_PATH }}
