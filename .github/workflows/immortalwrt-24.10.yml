name: immortalwrt-24.10

on:
  workflow_dispatch:
    inputs:
      manual:
        description: '手动触发一次编译'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-24.10
  CONFIG_FILE: configs/diff1.config
  DIY_P1_SH: diys/diy1.sh
  DIY_P2_SH: diys/diy3.sh
  FEEDS_CONF: feeds.conf.default
  FILES: files
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-24.04

    steps:
    - name: 准备结束
      uses: actions/checkout@main

    - name: 释放磁盘空间
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        
    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install asciidoc bash bcc bin86 binutils bison bzip2 clang-15 llvm-15 file flex g++ g++-multilib gawk gcc-multilib gettext git gzip help2man \
        intltool libboost-dev libelf-dev libncurses-dev libssl-dev libthread-queue-any-perl libusb-dev libxml-parser-perl make patch perl-modules \
        python3-dev python3-pip python3-pyelftools python3-setuptools rsync sharutils swig time unzip util-linux wget xsltproc zlib1g-dev zip zstd
        sudo -E apt-get -qq install dos2unix dwarves quilt npm jq
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo add-apt-repository ppa:longsleep/golang-backports
        sudo apt -y install golang-go
        sudo apt install -y ca-certificates curl gnupg
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
        echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_21.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
        sudo apt -y install nodejs
        sudo npm install -g pnpm
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载diy.sh
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: 更新、安装"feeds"
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    #- name: 加载scripts下的补丁
      #run: |
        #chmod +x $GITHUB_WORKSPACE/scripts/*.sh
        #cd openwrt
        #$GITHUB_WORKSPACE/scripts/03-convert_translation.sh
        #$GITHUB_WORKSPACE/scripts/preset-clash-core.sh
        #$GITHUB_WORKSPACE/scripts/v2raya-dat.sh
        #$GITHUB_WORKSPACE/scripts/passwall2.sh
    
    - name: 下载依赖
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build"
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 整理文件
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        # 整理固件包时候,删除您不想要的固件或者文件,让它不需要上传到Actions空间
        rm -rf packages
        rm -rf feeds.buildinfo
        rm -rf version.buildinfo
        rm -rf *kernel.bin
        rm -rf profiles.json
        rm -rf *rootfs.img
        rm -rf *rootfs.tar.gz
        rm -rf *.manifest
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: 上传固件
      uses: actions/upload-artifact@main
      with:
        name: immortalwrt${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
