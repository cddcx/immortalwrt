name: 旁路由1

on:
  workflow_dispatch:
    inputs:
      manual:
        description: '手动触发一次编译'

env:
  SOURCE_URL: https://github.com/immortalwrt/immortalwrt
  SOURCE_BRANCH: master
  CONFIG_FILE: configs/x86_64.config
  DIY_SCRIPT: diys/diy.sh
  CLASH_KERNEL: amd64
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: X86_64
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: 准备结束
      uses: actions/checkout@main

    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang llvm flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils python3-pyelftools python3-setuptools \
        libpython3-dev rsync unzip zlib1g-dev swig aria2 jq subversion qemu-utils ccache rename \
        libelf-dev device-tree-compiler libgnutls28-dev coccinelle libgmp3-dev libmpc-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载源码
      id: clone
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone $SOURCE_URL -b $SOURCE_BRANCH workspace/openwrt
        cd workspace/openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        VERSION_INFO=$(git show -s --date=short --format="Author: %an<br/>date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV

    - name: 加载diy.sh
      run: |
        chmod +x $GITHUB_WORKSPACE/diys/*.sh
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/diys/diy.sh
        
    - name: 更新、安装"feeds"
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e files1 ] && mv files1/files $OPENWRT_PATH/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $GITHUB_WORKSPACE/diys/*.sh
        chmod +x $GITHUB_WORKSPACE/scripts/*.sh
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/diys/settings.sh
        #$GITHUB_WORKSPACE/scripts/preset-clash-core.sh
        #$GITHUB_WORKSPACE/scripts/preset-passwall2.sh

    - name: 下载依赖
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译包
      run: |
        cd $OPENWRT_PATH
        echo -e "$(nproc) thread compile"
        make tools/compile -j$(nproc) || make tools/compile -j1 V=s
        make toolchain/compile -j$(nproc) || make toolchain/compile -j1 V=s
        make diffconfig
        make target/compile -j$(nproc) || make target/compile -j1 V=s IGNORE_ERRORS=1
        make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j1 V=s IGNORE_ERRORS=1
        make package/index

    - name: 生成固件
      id: generate
      run: |
        cd $OPENWRT_PATH
        make package/install -j$(nproc) || make package/install -j1 V=s
        make target/install -j$(nproc) || make target/install -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: 查看空间使用率
      if: (!cancelled())
      run: df -hT

    - name: 整理文件
      if: steps.generate.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        rm -rf packages feeds.buildinfo version.buildinfo *.manifest *kernel.bin *rootfs.img sha256sums
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

    - name: 上传固件
      if: steps.generate.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.SOURCE_REPO }}-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}-${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE_PATH }}
